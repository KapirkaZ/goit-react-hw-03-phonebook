{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onRemoveContact","className","styles","TaskList","map","contact","TaskList_item","name","number","buttonstyle","TaskList_button","type","onClick","id","Filter","value","onChangeFilter","filterstyle","inputstyle","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","pattern","TaskEditor_button","Component","Container","children","container","App","filter","gatheredData","data","addContact","task","cont","includes","alert","length","uuidv4","prevState","deleteContact","nameId","changeFilter","getFilteredNames","toLowerCase","removeContact","contactId","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","filteredNames","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc32f2d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__3Y_8o\",\"inputstyle\":\"Filter_inputstyle__2lZj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1ysIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1G7YM\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__rjIob\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__H96qE\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__3O1D5\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__2Z83p\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \": \" + contact.number}\n        {\n          <span className={styles.buttonstyle}>\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemoveContact(contact.id)}\n            ></button>\n          </span>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className={styles.filterstyle}>\n      Find contacts by name\n      <input\n        className={styles.inputstyle}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact({ ...this.state });\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  gatheredData = (data) => {\n    const newData = data;\n    return newData;\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  deleteContact = (nameId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((name) => name.id !== nameId),\n    }));\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getFilteredNames = () => {\n    const { filter, contacts } = this.state;\n    // const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredNames = this.getFilteredNames();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h1>Contacts</h1>\n\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n        <ContactList\n          contacts={filteredNames}\n          onRemoveContact={this.removeContact}\n        />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3Vkbx\",\"TaskList_item\":\"ContactList_TaskList_item__PpJd8\",\"completed\":\"ContactList_completed__1WGP1\",\"TaskList_text\":\"ContactList_TaskList_text__3iP2b\",\"TaskList_actions\":\"ContactList_TaskList_actions__3Ziyr\",\"TaskList_button\":\"ContactList_TaskList_button__22D3Z\",\"buttonstyle\":\"ContactList_buttonstyle__2h_YM\"};"],"sourceRoot":""}